{"version":3,"sources":["App.js","reportWebVitals.js","theme.js","index.js"],"names":["App","useState","Covid","Confirmed","Recovered","Hospitalized","Deaths","NewConfirmed","NewRecovered","NewHospitalized","NewDeaths","UpdateDate","data","setdata","useStyles","makeStyles","theme","appBarSpacer","mixins","toolbar","title","flexGrow","userSelect","container","display","flexDirection","alignItems","justifyContent","paper","padding","spacing","footer","backgroundColor","palette","background","marginTop","unit","useEffect","axios","get","then","response","console","log","catch","error","classes","className","root","CssBaseline","AppBar","Toolbar","Typography","variant","Container","Grid","item","xs","sm","md","Paper","style","borderStyle","borderColor","toLocaleString","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","createMuiTheme","typography","fontFamily","ReactDOM","render","ThemeProvider","document","getElementById"],"mappings":"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","file":"static/js/main.1bd8bbd8.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Container from \"@material-ui/core/Container\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Grid from \"@material-ui/core/Grid\";\nimport axios from \"axios\";\n\n// import { ResponsiveContainer, XAxis, YAxis, CartesianGrid,\n//   Tooltip, Legend, LineChart, Line, BarChart, Bar, PieChart,\n//   Pie, Cell, } from 'recharts';\n\nfunction App() {\n  const [data, setdata] = useState({\n    Covid: {\n      Confirmed: \"\",\n      Recovered: \"\",\n      Hospitalized: \"\",\n      Deaths: \"\",\n      NewConfirmed: \"\",\n      NewRecovered: \"\",\n      NewHospitalized: \"\",\n      NewDeaths: \"\",\n      UpdateDate: \"\",\n    },\n  });\n\n  const useStyles = makeStyles((theme) => ({\n    appBarSpacer: theme.mixins.toolbar,\n    title: {\n      flexGrow: 1,\n      userSelect: \"none\",\n    },\n    container: {\n      display: \"flex\",\n      flexDirection: \"column\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n    },\n    paper: {\n      padding: theme.spacing(2),\n      display: \"flex\",\n      flexDirection: \"column\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      userSelect: \"none\",\n    },\n    footer: {\n      backgroundColor: theme.palette.background.paper,\n      marginTop: theme.spacing.unit * 2,\n    },\n  }));\n\n  useEffect(() => {\n    const result = axios\n      .get(\"https://covid19.ddc.moph.go.th/api/Cases/today-cases-all\")\n      .then((response) => {\n        setdata({\n          Covid: {\n            Confirmed: response.data[\"0\"][\"total_case\"],\n            Recovered: response.data[\"0\"][\"total_recovered\"],\n\n            Deaths: response.data[\"0\"][\"total_death\"],\n            NewConfirmed: response.data[\"0\"][\"new_case\"],\n            NewRecovered: response.data[\"0\"][\"new_recovered\"],\n\n            NewDeaths: response.data[\"0\"][\"new_death\"],\n            UpdateDate: response.data[\"0\"][\"update_date\"],\n          },\n        });\n        console.log(data.Covid);\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n  }, []);\n\n  // const [spacing, setSpacing] = React.useState(2);\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar>\n        <Toolbar>\n          <Typography variant=\"h6\" className={classes.title}>\n            Thailand COVID-19\n          </Typography>\n          <Typography variant=\"h6\">\n            อัพเดทล่าสุด : {data.Covid.UpdateDate}\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <div className={classes.appBarSpacer} />\n      <div className={classes.appBarSpacer} />\n\n      <Container>\n        <Grid container spacing={3}>\n          <Grid item xs={6} sm={3} md={3}>\n            <Paper\n              className={classes.paper}\n              style={{ borderStyle: \"solid\", borderColor: \"red\" }}\n            >\n              <Typography variant=\"h5\">ติดเชื้อสะสม</Typography>\n              <Typography variant=\"h3\">\n                {data.Covid.Confirmed.toLocaleString()}\n              </Typography>\n              <Typography>\n                เพิ่มขึ้น (+{data.Covid.NewConfirmed.toLocaleString()})\n              </Typography>\n            </Paper>\n          </Grid>\n          <Grid item xs={6} sm={3} md={3}>\n            <Paper\n              className={classes.paper}\n              style={{ borderStyle: \"solid\", borderColor: \"green\" }}\n            >\n              <Typography variant=\"h5\">หายแล้ว</Typography>\n              <Typography variant=\"h3\">\n                {data.Covid.Recovered.toLocaleString()}\n              </Typography>\n              <Typography>\n                เพิ่มขึ้น (+{data.Covid.NewRecovered.toLocaleString()})\n              </Typography>\n            </Paper>\n          </Grid>\n\n          <Grid item xs={6} sm={3} md={3}>\n            <Paper\n              className={classes.paper}\n              style={{ borderStyle: \"solid\", borderColor: \"gray\" }}\n            >\n              <Typography variant=\"h5\">เสียชีวิต</Typography>\n              <Typography variant=\"h3\">\n                {data.Covid.Deaths.toLocaleString()}\n              </Typography>\n              <Typography>\n                เพิ่มขึ้น (+{data.Covid.NewDeaths.toLocaleString()})\n              </Typography>\n            </Paper>\n          </Grid>\n        </Grid>\n      </Container>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createMuiTheme } from '@material-ui/core/styles';\n\nconst font =  \"'Prompt', sans-serif;\";\nconst theme = createMuiTheme({\n    typography: {\n        fontFamily: font,\n       }\n})\n\nexport default theme;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport theme from './theme';\n\nReactDOM.render(\n  <ThemeProvider theme={theme}>\n    <CssBaseline />\n    <App />\n  </ThemeProvider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}